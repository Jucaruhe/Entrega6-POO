/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package entrega6;

import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.lang.NumberFormatException;

/**
 *
 * @author jucar
 */
public class Ventanaprincipal extends javax.swing.JFrame {

    /**
     * Creates new form Ventanaprincipal
     */
    public Ventanaprincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        txt_codigo = new javax.swing.JTextField();
        Leer_btn = new javax.swing.JButton();
        crear_btn = new javax.swing.JButton();
        actu_btn = new javax.swing.JButton();
        borrar_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel1.setText("Lista de amigos :)");
        jLabel1.setPreferredSize(new java.awt.Dimension(50, 25));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel4.setText("CÃ³digo:");
        jLabel4.setPreferredSize(new java.awt.Dimension(50, 25));

        jLabel5.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel5.setText("Nombre:");
        jLabel5.setPreferredSize(new java.awt.Dimension(50, 25));

        txt_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombreActionPerformed(evt);
            }
        });

        txt_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_codigoActionPerformed(evt);
            }
        });

        Leer_btn.setText("Leer");
        Leer_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Leer_btnActionPerformed(evt);
            }
        });

        crear_btn.setText("Crear");
        crear_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crear_btnActionPerformed(evt);
            }
        });

        actu_btn.setText("Actualizar");
        actu_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actu_btnActionPerformed(evt);
            }
        });

        borrar_btn.setText("Borrar");
        borrar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrar_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txt_codigo))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Leer_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(actu_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(crear_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(borrar_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                .addGap(81, 81, 81))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Leer_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(crear_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(actu_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(borrar_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombreActionPerformed

    private void txt_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoActionPerformed

    private void Leer_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Leer_btnActionPerformed
        // TODO add your handling code here:
        try {
 
            String nameNumberString;
            String name;
            long number;
            int index;
 
            // Using file pointer creating the file.
            File file = new File("C:\\Users\\jucar\\OneDrive\\Documentos\\NetBeansProjects\\Entrega6\\src\\friendsContact.txt");
 
            if (!file.exists()) {
 
                // Create a new file if not exists.
                file.createNewFile();
            }
 
            // Opening file in reading and write mode.
 
            RandomAccessFile raf= new RandomAccessFile(file, "rw");
            boolean found = false;
 
            // Traversing the file
            // getFilePointer() give the current offset
            // value from start of the file.
            while (raf.getFilePointer() < raf.length()) {
 
                // reading line from the file.
                nameNumberString = raf.readLine();
 
                // splitting the string to get name and
                // number
                String[] lineSplit
                    = nameNumberString.split("!");
 
                // separating name and number.
                name = lineSplit[0];
                number = Long.parseLong(lineSplit[1]);
 
                // Print the contact data
                System.out.println(
                    "Friend Name: " + name + "\n"
                    + "Contact Number: " + number + "\n");
            }}
            catch (IOException ioe){
                System.out.println(ioe);
            }
            catch (NumberFormatException nef){
                System.out.println(nef);
            }
    }//GEN-LAST:event_Leer_btnActionPerformed

    private void crear_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crear_btnActionPerformed
        // TODO add your handling code here:
        try {
        // Obtener el nombre y nÃºmero del contacto a crear
        String newName = txt_nombre.getText();
        long newNumber = Long.parseLong(txt_codigo.getText());

        String nameNumberString;
        String name;
        long number;

        // Crear el archivo si no existe
        File file = new File("C:\\Users\\jucar\\OneDrive\\Documentos\\NetBeansProjects\\Entrega6\\src\\friendsContact.txt");

        if (!file.exists()) {
            file.createNewFile();
        }

        // Abrir el archivo en modo de lectura y escritura
        RandomAccessFile raf = new RandomAccessFile(file, "rw");
        boolean found = false;

        // Comprobar si el nombre o nÃºmero del contacto ya existe
        while (raf.getFilePointer() < raf.length()) {
            // Leer una lÃ­nea del archivo
            nameNumberString = raf.readLine();

            // Separar el nombre y nÃºmero
            String[] lineSplit = nameNumberString.split("!");
            name = lineSplit[0];
            number = Long.parseLong(lineSplit[1]);

            // Comprobar si el nombre o nÃºmero ya existe
            if (name.equals(newName) || number == newNumber) {
                found = true;
                break;
            }
        }

        if (!found) {
            // Si el contacto no existe, agregarlo al archivo
            nameNumberString = newName + "!" + newNumber;
            raf.writeBytes(nameNumberString);
            raf.writeBytes(System.lineSeparator());

            // Imprimir mensaje de Ã©xito
            System.out.println("Amigo agregado.");

            // Cerrar el archivo
            raf.close();
        } else {
            // Si el contacto ya existe, imprimir mensaje de error
            raf.close();
            System.out.println("El nombre o nÃºmero ya existe.");
        }
    } catch (IOException ioe) {
        System.out.println(ioe);
    } catch (NumberFormatException nef) {
        System.out.println(nef);
    }
    }//GEN-LAST:event_crear_btnActionPerformed

    private void actu_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actu_btnActionPerformed
        // TODO add your handling code here:
        try {
        // Obtener el nombre del contacto a actualizar
        String newName = txt_nombre.getText();

        // Obtener el nuevo nÃºmero del contacto a actualizar
        long newNumber = Long.parseLong(txt_codigo.getText());

        String nameNumberString;
        String name;
        long number;
        int index;

        // Abrir el archivo en modo de lectura y escritura
        File file = new File("C:\\Users\\jucar\\OneDrive\\Documentos\\NetBeansProjects\\Entrega6\\src\\friendsContact.txt");

        if (!file.exists()) {
            // Si el archivo no existe, imprimir mensaje de error
            System.out.println("Archivo no encontrado.");
            return;
        }

        // Crear un archivo temporal
        File tmpFile = new File("temp.txt");

        // Abrir el archivo temporal en modo de lectura y escritura
        RandomAccessFile raf = new RandomAccessFile(file, "rw");
        RandomAccessFile tmpraf = new RandomAccessFile(tmpFile, "rw");
        boolean found = false;

        // Buscar el contacto por su nombre o nÃºmero
        while (raf.getFilePointer() < raf.length()) {
            // Leer una lÃ­nea del archivo
            nameNumberString = raf.readLine();

            // Separar el nombre y nÃºmero
            String[] lineSplit = nameNumberString.split("!");

            // Separar el nombre y nÃºmero
            name = lineSplit[0];
            number = Long.parseLong(lineSplit[1]);

            // Comprobar si el nombre o nÃºmero coincide
            if (name.equals(newName) || number == newNumber) {
                found = true;
                break;
            }
        }

        // Actualizar el contacto si se encontrÃ³
        if (found) {
            // Volver al principio del archivo
            raf.seek(0);

            // Actualizar el nÃºmero del contacto en el archivo temporal
            while (raf.getFilePointer() < raf.length()) {
                // Leer una lÃ­nea del archivo
                nameNumberString = raf.readLine();

                // Separar el nombre y nÃºmero
                index = nameNumberString.indexOf('!');
                name = nameNumberString.substring(0, index);

                // Comprobar si el contacto es el que se desea actualizar
                if (name.equals(newName)) {
                    // Actualizar el nÃºmero del contacto
                    nameNumberString = name + "!" + newNumber;
                }

                // Escribir el contacto en el archivo temporal
                tmpraf.writeBytes(nameNumberString);
                tmpraf.writeBytes(System.lineSeparator());
            }

            // Copiar el contenido del archivo temporal al archivo original
            raf.seek(0);
            tmpraf.seek(0);

            while (tmpraf.getFilePointer() < tmpraf.length()) {
                raf.writeBytes(tmpraf.readLine());
                raf.writeBytes(System.lineSeparator());
            }

            // Establecer la longitud del archivo original como la del archivo temporal
            raf.setLength(tmpraf.length());

            // Cerrar los recursos
            tmpraf.close();
            raf.close();

            // Eliminar el archivo temporal
            tmpFile.delete();

            System.out.println("Amigo actualizado.");
        } else {
            // Si el contacto no se encontrÃ³, imprimir mensaje de error
            raf.close();
            System.out.println("El nombre o nÃºmero no existe.");
        }
    } catch (IOException ioe) {
        System.out.println(ioe);
    } catch (NumberFormatException nef) {
        System.out.println(nef);
    }
    }//GEN-LAST:event_actu_btnActionPerformed

    private void borrar_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrar_btnActionPerformed
        // TODO add your handling code here:
        try {
        // Obtener el nombre del contacto a borrar
        String newName = txt_nombre.getText();

        String nameNumberString;
        String name;
        long number;
        int index;

        // Abrir el archivo en modo de lectura y escritura
        File file = new File("C:\\Users\\jucar\\OneDrive\\Documentos\\NetBeansProjects\\Entrega6\\src\\friendsContact.txt");

        if (!file.exists()) {
            // Si el archivo no existe, imprimir mensaje de error
            System.out.println("Archivo no encontrado.");
            return;
        }

        // Crear un archivo temporal
        File tmpFile = new File("temp.txt");

        // Abrir el archivo temporal en modo de lectura y escritura
        RandomAccessFile raf = new RandomAccessFile(file, "rw");
        RandomAccessFile tmpraf = new RandomAccessFile(tmpFile, "rw");
        boolean found = false;

        // Buscar el contacto por su nombre
        while (raf.getFilePointer() < raf.length()) {
            // Leer una lÃ­nea del archivo
            nameNumberString = raf.readLine();

            // Separar el nombre y nÃºmero
            String[] lineSplit = nameNumberString.split("!");

            // Separar el nombre
            name = lineSplit[0];

            // Comprobar si el nombre coincide
            if (name.equals(newName)) {
                found = true;
                break;
            }
        }

        // Borrar el contacto si se encontrÃ³
        if (found) {
            // Volver al principio del archivo
            raf.seek(0);

            // Copiar los contactos al archivo temporal, excepto el que se desea borrar
            while (raf.getFilePointer() < raf.length()) {
                // Leer una lÃ­nea del archivo
                nameNumberString = raf.readLine();

                // Separar el nombre
                index = nameNumberString.indexOf('!');
                name = nameNumberString.substring(0, index);

                // Comprobar si el contacto es el que se desea borrar
                if (name.equals(newName)) {
                    continue; // Saltar la escritura de este contacto en el archivo temporal
                }

                // Escribir el contacto en el archivo temporal
                tmpraf.writeBytes(nameNumberString);
                tmpraf.writeBytes(System.lineSeparator());
            }

            // Copiar el contenido del archivo temporal al archivo original
            raf.seek(0);
            tmpraf.seek(0);

            while (tmpraf.getFilePointer() < tmpraf.length()) {
                raf.writeBytes(tmpraf.readLine());
                raf.writeBytes(System.lineSeparator());
            }

            // Establecer la longitud del archivo original como la del archivo temporal
            raf.setLength(tmpraf.length());

            // Cerrar los recursos
            tmpraf.close();
            raf.close();

            // Eliminar el archivo temporal
            tmpFile.delete();

            System.out.println("Amigo borrado.");
        } else {
            // Si el contacto no se encontrÃ³, imprimir mensaje de error
            raf.close();
            System.out.println("El nombre no existe.");
        }
    } catch (IOException ioe) {
        System.out.println(ioe);
    }
    }//GEN-LAST:event_borrar_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventanaprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventanaprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventanaprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventanaprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventanaprincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Leer_btn;
    private javax.swing.JButton actu_btn;
    private javax.swing.JButton borrar_btn;
    private javax.swing.JButton crear_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txt_codigo;
    private javax.swing.JTextField txt_nombre;
    // End of variables declaration//GEN-END:variables
}
